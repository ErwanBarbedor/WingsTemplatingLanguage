#-- TEST : basic text
foo
#-- RESULT
foo
#-- END

#---------------------------------

#-- TEST : comment 1
#-- Commentary
#-- RESULT
#-- END

#-- TEST : comment 2
foo #-- Commentary
#-- RESULT
foo 
#-- END

#-- TEST : comment 3
foo
#-- Commentary
bar
#-- RESULT
foo
bar
#-- END

#---------------------------------

#-- TEST : lua 1
#(a=5)
#a
#-- RESULT
5
#-- END

#-- TEST : lua 2
#(a=5)
#macro foo #(local a = 2) #a #end
#foo #a
#-- RESULT

  2  5
#-- END

#-- TEST : lua-inline eval
#(1+1)
#-- RESULT
2
#-- END

#---------------------------------

#-- TEST : for 1
#for i=1, 2 #do
    foo
#end
#-- RESULT
foo
foo
#-- END

#-- TEST : for 2
#for i=1, 10 #do #i #end
#-- RESULT
 1  2  3  4  5  6  7  8  9  10 
#-- END

#-- TEST : for 3
#for i=1, 2 #do
    #for j=1, 2 #do
        #i*#j=#(i*j)
    #end
#end
#-- RESULT
1*1=1
1*2=2
2*1=2
2*2=4
#-- END

#-- TEST : while
#lua i=5 #end
#while i>2 #do
    #i
    #lua i=i-1 #end
#end
#-- RESULT
5
4
3
#-- END

#-- TEST : if
#if 1+1==2 #then
    foo
#else
    bar
#end
#-- RESULT
foo
#-- END

#---------------------------------

#-- TEST : simple macro
#macro foo bar #end #foo
#-- RESULT
  bar 
#-- END

#-- TEST : macro with args
#macro double(x)
    #x #x
#end
#double(foo)
#-- RESULT
foo foo

#-- END

#-- TEST : macro with named args 1
#macro double(x=bar)
    #x #x
#end
#double
#-- RESULT
bar bar

#-- END

#-- TEST : macro with named args 2
#macro double(x=bar)
    #x #x
#end
#double(x=foo)
#-- RESULT
foo foo

#-- END

#-- TEST : macro with named args 3
#macro cat(x, y=bar)
    #x#y
#end
#cat(foo)
#-- RESULT
foobar

#-- END

#-- TEST : macro with named args 4
#macro cat(x, y=bar)
    #x#y
#end
#cat(foo, y=foo)
#-- RESULT
foofoo

#-- END

#-- TEST : macro with named args 5
#macro cat(x=bar space bar)
    #x
#end
#cat
#-- RESULT
bar space bar

#-- END

#-- TEST : macro with named args 6
#macro foo bar #end
#macro cat(x=#foo)
    #x
#end
#cat
#-- RESULT

 bar 

#-- END

#-- TEST : simple function
#function foo return "bar" #end #foo
#-- RESULT
 bar
#-- END

#-- TEST : function with args
#function double(x)
    return x .. x
#end
#double(foo)
#-- RESULT
foofoo
#-- END

#-- TEST : function with named args 1
#function double(x=bar)
    return x .. " " .. x
#end
#double
#-- RESULT
bar bar
#-- END

#-- TEST : function with named args 2
#function double(x=bar)
    return x .. " " .. x
#end
#double(x=foo)
#-- RESULT
foo foo
#-- END

#-- TEST : function with named args 3
#function cat(x, y=bar)
    return x..y
#end
#cat(foo)
#-- RESULT
foobar
#-- END

#-- TEST : function with named args 4
#function cat(x, y=bar)
    return x..y
#end
#cat(foo, y=foo)
#-- RESULT
foofoo
#-- END

#-- TEST : function with named args 5
#function cat(x=bar space bar)
    return x
#end
#cat
#-- RESULT
bar space bar
#-- END

#-- TEST : function with named args 6
#macro foo bar #end
#function cat(x=#foo)
    return x
#end
#cat
#-- RESULT

 bar 
#-- END

#-- TEST : function with named args 7
#function cat(x, y)
    return x .. (y or "")
#end
#cat(x=5)
#-- RESULT
5
#-- END

#-- TEST : function with named args 8
#function cat(x, y)
    return (x or "") .. y
#end
#cat(y=5)
#-- RESULT
5
#-- END

#-- TEST : function with named args 9
#function cat(x, y)
    return (x or "") .. y
#end
#cat(y=5, 1)
#-- RESULT
 15
#-- END

#---------------------------------

#-- TEST : begin sugar 1
#macro foo(x) <#x> #end
#begin foo
    foo
#end
#-- RESULT

 <foo
> #-- END

#-- TEST : begin sugar 2
#macro foo(x, y) <#y:#x> #end
#begin foo(bar)
    foo
#end
#-- RESULT

 <bar:
foo
> #-- END


#---------------------------------

#-- TEST : import 1
#import(toimport)
#-- RESULT
foo
#-- END

#-- TEST : import 2
#import(lib)
#foo
#-- RESULT

 bar 
#-- END

#-- TEST : include
#include(lib.plume)
#-- RESULT
#macro foo bar #end
#-- END